name: build

on:
  push:
    branches:
    - main
    - release**
    paths-ignore:
      - '**.md'
      - '**.rst'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.rst'

jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: False
      matrix:
        #os: [windows, ubuntu, macos]
        # TODO need to figure out how to install libspatialindex-dev for
        # windows and macos
        os: [ubuntu]
        python-version: ["3.10"]
        include:
          - os: ubuntu
            python-version: "3.9"
          - os: ubuntu
            python-version: "3.8"
          # Disabled for now. See https://github.com/projectmesa/mesa/issues/1253
          #- os: ubuntu
          #  python-version: 'pypy-3.8'

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('Pipfile.lock') }}
    - name: Install dependencies
      run: |
        sudo apt-get install libspatialindex-dev
        pip install .
        pip install pytest pytest-cov
    - name: Test with pytest
      run: pytest --cov=mesa_geo tests/ --cov-report=xml
    - if: matrix.os == 'ubuntu'
      name: Codecov
      uses: codecov/codecov-action@v2

  lint-flake:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - run: pip install flake8
    - name: Lint with flake8
      # TODO use .flake8 from projectmesa/mesa
      run: flake8 . --count --show-source --statistics

  lint-black:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - run: pip install black[jupyter]
    - name: Lint with black
      run: black --check .
